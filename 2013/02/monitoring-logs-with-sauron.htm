<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Mauro Rocchi's Blog - Monitoring logs with Sauron</title>
    <link rel="stylesheet" type="text/css" href="/css/pygments.css"/>
    <link rel="stylesheet" type="text/css" href="/css/theme.css"/>
    
    <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-38190103-1']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
    </script>
</head>

<body>

<section id="container">
<article class="content">
    <header>
        <h1>Monitoring logs with Sauron</h1>
        <div class="meta">Written by <strong>Mauro Rocchi</strong> on 13 February 2013</div>
    </header>

    <p><a href="http://github.com/maurocchi/sauron">Sauron</a> is a simple self-contained <em>Python</em> 2.3 script, without any dependency, useful to monitor errors on log files in real time from the command-line.</p>
<p>By default it follows all log files in <code>/var/log</code> directory and shown the rows containing an "error" word (bad, cannot, error, exception, fail, fails, failed, failure, incorrect, invalid, unable, unexpected, wrong).</p>
<div class="codehilite"><pre><span class="nv">$ </span>sauron <span class="o">[</span>options<span class="o">]</span> <span class="o">[</span>paths <span class="o">(</span>default /var/log<span class="o">)]</span>

Options:
    -h, --help            show this <span class="nb">help </span>message and <span class="nb">exit</span>
    -f FILENAME_REGEX, --files<span class="o">=</span>FILENAME_REGEX
                          filename regex <span class="o">(</span>default <span class="s1">&#39;log$&#39;</span><span class="o">)</span>
    -a, --all             the log file are followed from the begin
    -w WORDS, --words<span class="o">=</span>WORDS
                          comma-separed words which filters the lines <span class="o">(</span>default:
                          error, exception, fail, fails, failed, failure,
                          cannot, unable, unexpected, incorrect, invalid, bad,
                          wrong<span class="o">)</span>
    -r LINE_REGEX, --regex<span class="o">=</span>LINE_REGEX
                          regex to filter the log lines <span class="o">(</span>it overwrites the
                          --words option<span class="o">)</span>
    -i CHECK_INTERVAL, --interval<span class="o">=</span>CHECK_INTERVAL
                          interval in seconds before to scan again the paths
                          <span class="o">(</span>default 1<span class="o">)</span>
    --version
</pre></div>

    <!-- AddThis Button BEGIN -->
    <div class="addthis_toolbox addthis_default_style addthis_16x16_style">
    <a class="addthis_button_facebook"></a>
    <a class="addthis_button_twitter"></a>
    <a class="addthis_button_google_plusone_share"></a>
    <a class="addthis_button_email"></a>
    <a class="addthis_button_compact"></a><a class="addthis_counter addthis_bubble_style"></a>
    </div>
    <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5231b03d468cf7fd"></script>
    <!-- AddThis Button END -->
</article>

<div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'maurocchi'; // required: replace example with your forum shortname
    var disqus_identifier = '/2013/02/monitoring-logs-with-sauron.htm';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments</a>.</noscript>
</section>

<aside id="sidebar">
    <header>
        <h1><a href="/">Mauro Rocchi's Blog</a></h1>
        <h2>Programming in Action</h2>
    </header>

    <section class="pages">
        <h1>Pages</h1>
        <ul>
            <li><a href="/about.htm">About</a></li>
            <li><a xmlns:cc="http://creativecommons.org/ns#" href="https://github.com/maurocchi" property="cc:attributionName" rel="cc:attributionURL">Open source</a></li>
        </ul>
    </section>

    <section class="posts">
        <h1>Recent posts</h1>
        <ul>
            <li><a href="/2013/04/playing-with-haskell.htm">Playing with Haskell</a></li>
            <li><a href="/2013/02/monitoring-logs-with-sauron.htm">Monitoring logs with Sauron</a></li>
            <li><a href="/2013/01/introduction-to-emaze-dysfunctional.htm">Introduction to Emaze Dysfunctional</a></li>
        </ul>
    </section>

    <section class="license">
        <a href="http://creativecommons.org/licenses/by-sa/4.0/">
            <img alt="Creative Commons License" style="border-width:0" src="/images/license.png" />
        </a><br />
        This content is distributed with 
        <a href="http://creativecommons.org/licenses/by-sa/4.0/">
        Creative Commons Attribution-ShareAlike 4.0 International Public License</a>.
    </section>
</aside>

</body>
</html>